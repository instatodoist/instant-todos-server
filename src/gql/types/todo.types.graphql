# Queries -------------------------------------------

type Query {
  todoUpcoming (filter: TodoFilterInputType, first: Int, offset: Int, sort: TodoSortInputType ) : TodoListCompletedType
  todoCompleted (filter: TodoCompletedFilterInputType, first: Int, offset: Int, sort: TodoCompletedSortInputType ) : TodoListCompletedType
  todoList (filter: TodoFilterInputType, first: Int, offset: Int, sort: TodoSortInputType ): TodoListType
  todoView(id: ID!): TodoType
}

# Mutations -------------------------------------------

type Mutation {
  addTodo(input: TodoInputType!): SuccessType!
  updateTodo(id: ID!, input: TodoInputType!): SuccessType!
  deleteTodo(id: ID!): SuccessType!
}

# Subscriptions -------------------------------------------

type Subscription {
  postAdded: TodoType
}

# Types -------------------------------------------

enum TodoPriorityEnumType {
  P1
  P2
  P3
  P4
}

enum TodoEnumType{
  today
  backlog
  pending
  upcoming
}

input TodoInputType {
  title: String
  projectId: ID
  labelIds: [ID]
  scheduledDate: Date
  isCompleted: Boolean
  isInProgress: Boolean
  priority: TodoPriorityEnumType
  notes: String
  noteId: String
  subTasks: [TodoInputType]
}

input TodoSortInputType {
  createdAt: SortEnumType
  updatedAt: SortEnumType
  scheduledDate: SortEnumType
  priority: SortEnumType
}

input TodoCompletedSortInputType {
  updatedAt: SortEnumType
  scheduledDate: SortEnumType
}

input TodoFilterInputType {
  isCompleted: Boolean
  title_contains: String
  labelIds: [ID]
  projectId: ID
  startAt: Date
  endAt: Date,
  type: TodoEnumType
}

input TodoCompletedFilterInputType {
  title_contains: String
}

type TodoType {
  _id: String!
  title: String!
  user: User
  priority: TodoPriorityEnumType
  isCompleted: Boolean
  isInProgress: Boolean
  createdAt: Date!
  updatedAt: Date
  scheduledDate: Date
  projectId: ID
  project: TodoProjectListType
  comments: [TodoCommentType]
  labels: [TodoLabelListType]
  subTasks: [TodoType]
  parent: String
}

type TodoCompletedType {
  _id: String!
  list: [TodoType]
  count: Int
}

type TodoListType {
  totalCount: Int
  data: [TodoType]
}

type TodoListCompletedType {
  totalCount: Int
  data: [TodoCompletedType]
}

# type SubTask {
#   _id: String!
#   projectId: ID
#   title: String!
#   user: User
#   priority: TodoPriorityEnumType
#   isCompleted: Boolean
#   isInProgress: Boolean
#   createdAt: Date!
#   updatedAt: Date
#   scheduledDate: Date
#   notes: [TodoCommentType]
#   labels: [TodoLabelListType]
# }